# Production config
# Run with:
# Cargo run --release production

# if not enable feature "peace", use this osu!api keys,
# else, will get from peace database instead of use this.
osu_api_keys = []

# optional, needs enable feature "peace"
# If true, will check the database connection pools on created
check_pools_on_created = true
check_db_version_on_created = true

# !!warn: If debug is enabled, 
# the part of the route used for testing will be loaded. 
# Please do not expose it in the production environment
debug = false

# Logger config
[logger]
# Level is selected from logger.mode
level = "info"

# Actix logger middleware format
# Default is: '%a "%r" %s %b "%{Referer}i" "%{User-Agent}i" %T'
# https://actix.rs/actix-web/actix_web/middleware/struct.Logger.html
actix_log_format = '%s - %{r}a "%r" %b %T'

# Logger will not record logs of these endpoints
# For example,
# i don't want logger to print logs about endpoint "/favicon.ico", so i fill it in
exclude_endpoints = ["/favicon.ico"]
exclude_endpoints_regex = ["/web*"]

# Logger will not record logs from these modules
exclude_modules = ["maxminddb::decoder", "hyper", "h2", "rustls", "reqwest"]

# Logger mode is env_logger config
# Support filter: "trace,mio::sys=info"
# https://docs.rs/env_logger/0.8.1/env_logger/index.html
[logger.mode]
debug = "trace"
info = "info"
error = "error"
warn = "warn"


# Prometheus is an open-source monitoring metrics solution
# It can help you monitor the status of databases, systems, web applications, and collect data
# https://prometheus.io/
# And, with grafana, we can make real-time visualization charts!
# https://grafana.com/
[prometheus]
# Your application name
namespace = "peace"

# Data collection address,
# Means you can access: http://host:port<endpoint>
endpoint = "/metrics"

# If true, logger will not log prometheus endpoint
exclude_endpoint_log = true

# optional, needs enable feature "peace"
# Docs for postgres config: 
# https://docs.rs/deadpool-postgres/0.5.6/deadpool_postgres/config/struct.Config.html
[postgres]
host = "localhost"
port = 5432
user = "postgres"
password = "123456"
dbname = "peace"

[postgres.pool]
max_size = 16

# optional, needs enable feature "peace"
# Docs for redis config: 
# https://docs.rs/deadpool-redis/0.6.1/deadpool_redis/struct.Config.html
[redis]
# Format here:
# redis://[:<passwd>@]<hostname>[:port][/<db>]
url = "redis://127.0.0.1:6379"

[redis.pool]
max_size = 16
